// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sparky.WebApp.Api.Contexts;

namespace Sparky.WebApp.Api.Migrations
{
    [DbContext(typeof(SparkyDbContext))]
    [Migration("20191120150549_M002_addSlotId")]
    partial class M002_addSlotId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sparky.WebApp.Api.Models.ChargingStation", b =>
                {
                    b.Property<int>("ChargingStationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailablePowerbank");

                    b.Property<bool>("CloseStation");

                    b.Property<bool>("IsLoanRequest");

                    b.Property<bool>("IsReturnRequest");

                    b.Property<long>("Lat");

                    b.Property<long>("Lon");

                    b.Property<string>("Name");

                    b.Property<int>("NumOfAvailableSlots");

                    b.Property<int>("NumOfSlots");

                    b.Property<bool>("OpenStation");

                    b.Property<bool>("ReturnOK");

                    b.HasKey("ChargingStationId");

                    b.ToTable("ChargingStations");
                });

            modelBuilder.Entity("Sparky.WebApp.Api.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BorrowerUserInfoId");

                    b.Property<bool>("OnGoing");

                    b.Property<int?>("PowerBankId");

                    b.Property<int>("PowerbankLoanObjId");

                    b.Property<int>("Price");

                    b.Property<long>("StartDateTime");

                    b.Property<long>("StopDateTime");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerUserInfoId");

                    b.HasIndex("PowerBankId");

                    b.HasIndex("PowerbankLoanObjId")
                        .IsUnique();

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Sparky.WebApp.Api.Models.PowerBank", b =>
                {
                    b.Property<int>("PowerBankId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentStationId");

                    b.Property<int>("CurrentUserId");

                    b.Property<string>("Identifier");

                    b.Property<int>("Level");

                    b.Property<int>("SlotId");

                    b.Property<bool>("isLent");

                    b.HasKey("PowerBankId");

                    b.ToTable("PowerBanks");
                });

            modelBuilder.Entity("Sparky.WebApp.Api.Models.PowerbankLoanObj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level");

                    b.Property<int>("Powerbank");

                    b.HasKey("Id");

                    b.ToTable("PowerbankLoanObjs");
                });

            modelBuilder.Entity("Sparky.WebApp.Api.Models.PowerbankSlot", b =>
                {
                    b.Property<int>("PowerbankSlotId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsEmpty");

                    b.Property<int>("LevedCharged");

                    b.Property<int>("SlotIdentifier");

                    b.Property<int?>("StationChargingStationId");

                    b.Property<int>("StationKey");

                    b.HasKey("PowerbankSlotId");

                    b.HasIndex("StationChargingStationId");

                    b.ToTable("PowerbankSlot");
                });

            modelBuilder.Entity("Sparky.WebApp.Api.Models.UserInfo", b =>
                {
                    b.Property<int>("UserInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirebaseUid");

                    b.Property<string>("UserName");

                    b.HasKey("UserInfoId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Sparky.WebApp.Api.Models.Loan", b =>
                {
                    b.HasOne("Sparky.WebApp.Api.Models.UserInfo", "Borrower")
                        .WithMany("LoanHistory")
                        .HasForeignKey("BorrowerUserInfoId");

                    b.HasOne("Sparky.WebApp.Api.Models.PowerBank")
                        .WithMany("LoanHistory")
                        .HasForeignKey("PowerBankId");

                    b.HasOne("Sparky.WebApp.Api.Models.PowerbankLoanObj", "PowerbankLoanObj")
                        .WithOne("Loan")
                        .HasForeignKey("Sparky.WebApp.Api.Models.Loan", "PowerbankLoanObjId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sparky.WebApp.Api.Models.PowerbankSlot", b =>
                {
                    b.HasOne("Sparky.WebApp.Api.Models.ChargingStation", "Station")
                        .WithMany("Slots")
                        .HasForeignKey("StationChargingStationId");
                });
#pragma warning restore 612, 618
        }
    }
}
